<UserControl
	x:Class="ApplicationClient.XamlControls.TabButton"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

	mc:Ignorable="d"
	x:Name="ThisControl"

	d:DesignHeight="70" d:DesignWidth="70">
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Utils/Resources/Colors.xaml" />
			</ResourceDictionary.MergedDictionaries>

			<Style x:Key="TabLabelStyle" TargetType="TextBlock">
				<Setter Property="Text" Value="{Binding Label, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}" />
				<Setter Property="FontSize" Value="20" />
				<Setter Property="Foreground" Value="{StaticResource ForegroundColor}" />
				<Setter Property="Height" Value="70" />
				<Setter Property="Margin" Value="0 18 0 0"/>
				<Style.Triggers>
					<DataTrigger Binding="{Binding HasLabel, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}" Value="False">
						<Setter Property="Visibility" Value="Visible" />
					</DataTrigger>
					<DataTrigger Binding="{Binding HasLabel, ElementName=ThisControl, UpdateSourceTrigger=PropertyChanged}" Value="True">
						<Setter Property="Visibility" Value="Collapsed" />
					</DataTrigger>
				</Style.Triggers>
			</Style>

			<Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
				<Setter Property="Height" Value="70" />
				<Setter Property="Width" Value="70" />
				<Setter Property="Background" Value="{StaticResource SecondaryBackgroundColor}" />
				<Setter Property="FocusVisualStyle" Value="{x:Null}" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<Border
								x:Name="Border"
								Background="{TemplateBinding Background}"
								BorderThickness="{TemplateBinding BorderThickness}">

								<ContentPresenter
									TextBlock.Foreground="{TemplateBinding Foreground}">
									<ContentPresenter.Content>
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="70"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>

											<Path
												Grid.Column="0"
												x:Name="Icon">
												<Path.Style>
													<Style TargetType="{x:Type Path}">
														<Setter Property="Fill" Value="{StaticResource IconsColor}" />
														<Setter Property="Stretch" Value="Uniform" />
														<Setter Property="HorizontalAlignment" Value="Stretch" />
														<Setter Property="Width" Value="23" />
														<Setter Property="Height" Value="23" />
														<Setter Property="Data" Value="{Binding Icon, ElementName=ThisControl}" />
													</Style>
												</Path.Style>
											</Path>
											<TextBlock
												Grid.Column="1"
												x:Name="LabelText"
												Style="{StaticResource TabLabelStyle}" />
										</Grid>
									</ContentPresenter.Content>
								</ContentPresenter>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Setter TargetName="Icon" Property="Fill" Value="{StaticResource ForegroundColor}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<DataTrigger 
						Binding="{Binding HasLabel, 
						ElementName=ThisControl, 
						UpdateSourceTrigger=PropertyChanged}" 
						Value="False">
						<Setter Property="Width" Value="200"/>
					</DataTrigger>
					<DataTrigger
						Binding="{Binding HasLabel, 
						ElementName=ThisControl,
						UpdateSourceTrigger=PropertyChanged}"
						Value="True">
						<Setter Property="Width" Value="70" />
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid>
		<Button
			Style="{StaticResource TabButtonStyle}"
			Command="{Binding Command, ElementName=ThisControl}"
			CommandParameter="{Binding CommandParameter, ElementName=ThisControl}" />
	</Grid>
</UserControl>